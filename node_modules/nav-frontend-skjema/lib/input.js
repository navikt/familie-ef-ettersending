"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const PT = __importStar(require("prop-types"));
const classnames_1 = __importDefault(require("classnames"));
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
const skjemaelement_feilmelding_1 = __importDefault(require("./skjemaelement-feilmelding"));
const _1 = require(".");
require("nav-frontend-skjema-style");
const cls = (className) => classnames_1.default("skjemaelement", className);
const inputClass = (width, className, harFeil, mini) => classnames_1.default("skjemaelement__input", className, `input--${width.toLowerCase()}`, {
    "skjemaelement__input--harFeil": harFeil,
    "skjemaelement__input--mini": mini,
});
/**
 * Standard inputfelt med mulighet for 책 sette bredde
 */
class Input extends React.Component {
    render() {
        const _a = this.props, { label, description, bredde, feil, id, name, inputRef, className, inputClassName, mini } = _a, other = __rest(_a, ["label", "description", "bredde", "feil", "id", "name", "inputRef", "className", "inputClassName", "mini"]);
        const inputId = id || nav_frontend_js_utils_1.guid();
        return (React.createElement(_1.SkjemaGruppeFeilContext.Consumer, null, (context) => {
            const feilmelding = context.feil || feil;
            const feilmeldingId = context.feilmeldingId || nav_frontend_js_utils_1.guid();
            const descriptionId = description ? nav_frontend_js_utils_1.guid() : undefined;
            return (React.createElement("div", { className: cls(className) },
                label && React.createElement(_1.Label, { htmlFor: inputId }, label),
                description && (React.createElement("div", { className: "skjemaelement__description", id: descriptionId }, description)),
                React.createElement("input", Object.assign({ type: "text", className: inputClass(bredde, inputClassName, feilmelding, mini), id: inputId, name: name, "aria-invalid": !!feilmelding, "aria-describedby": descriptionId, "aria-errormessage": feilmelding ? feilmeldingId : undefined }, other, { ref: inputRef })),
                !context.feil && !!feil && (React.createElement(skjemaelement_feilmelding_1.default, { id: feilmeldingId }, typeof feilmelding !== "boolean" && feilmelding))));
        }));
    }
}
Input.propTypes = {
    /**
     * Label for tekstfeltet
     */
    label: PT.node,
    /**
     * Ekstrainformasjon under overskrift
     */
    description: PT.node,
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil: PT.oneOfType([PT.node, PT.bool]),
    /**
     * Bredden til inputfeltet
     */
    bredde: PT.oneOf(["fullbredde", "XXL", "XL", "L", "M", "S", "XS", "XXS"]),
    /**
     * Id for inputfelt, hvis id ikke er satt brukes name eller en tilfeldig guid
     */
    id: PT.string,
    /**
     * Name for inputfelt, hvis name ikke er satt brukes id eller en tilfeldig guid
     */
    name: PT.string,
    /**
     * Referanse til selve inputfeltet. Brukes for eksempel til 책 sette fokus
     */
    inputRef: PT.func,
    /**
     * Classname som blir satt p책 komponentwrapperen
     */
    className: PT.string,
    /**
     * Classname som blir satt p책 input-elementet
     */
    inputClassName: PT.string,
};
Input.defaultProps = {
    bredde: "fullbredde",
    feil: undefined,
    id: undefined,
    name: undefined,
    inputRef: undefined,
    className: undefined,
    inputClassName: undefined,
};
exports.default = Input;
