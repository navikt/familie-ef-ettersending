"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const fnrvalidator_1 = require("@navikt/fnrvalidator");
const input_1 = __importDefault(require("./input"));
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
require("nav-frontend-skjema-style");
class FnrInput extends React.Component {
    onChange(e) {
        if (this.props.onValidate) {
            const valid = e.currentTarget.validity.valid &&
                fnrvalidator_1.fnr(e.currentTarget.value).status === "valid";
            this.props.onValidate(valid);
        }
        if (this.props.onChange) {
            this.props.onChange(e);
        }
    }
    render() {
        const domProps = nav_frontend_js_utils_1.omit(Object.assign({}, this.props), "onValidate");
        return (React.createElement(input_1.default, Object.assign({}, domProps, { type: "text", inputMode: "numeric", pattern: "[0-9]*", inputClassName: "skjemaelement__input-fodselsnr", onChange: (e) => this.onChange(e) })));
    }
}
exports.default = FnrInput;
