"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const classnames_1 = __importDefault(require("classnames"));
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
require("nav-frontend-skjema-style");
const _1 = require(".");
class CheckboksPanel extends React.Component {
    constructor(props) {
        super(props);
        this.handleChange = (e) => {
            this.setState({ checked: e.target.checked });
            if (typeof this.props.onChange === "function")
                this.props.onChange(e);
        };
        this.state = { hasFocus: false, checked: !!this.props.checked };
    }
    // eslint-disable-next-line camelcase
    UNSAFE_componentWillReceiveProps(newProps) {
        this.setState({ checked: !!newProps.checked });
    }
    toggleOutline() {
        this.setState({ hasFocus: !this.state.hasFocus });
    }
    render() {
        const _a = this.props, { id, label, subtext, disabled, feil } = _a, other = __rest(_a, ["id", "label", "subtext", "disabled", "feil"]);
        const { hasFocus, checked } = this.state;
        const inputId = id || nav_frontend_js_utils_1.guid();
        const cls = (feil) => classnames_1.default("inputPanel checkboksPanel", {
            "inputPanel--checked": checked && !disabled,
            "inputPanel--focused": hasFocus && !disabled,
            "inputPanel--disabled": disabled === true,
            "skjemaelement__input--harFeil": feil && !checked,
        });
        return (React.createElement(_1.SkjemaGruppeFeilContext.Consumer, null, (context) => (React.createElement("label", { className: cls(disabled ? false : !!context.feil || !!feil), htmlFor: inputId },
            React.createElement("input", Object.assign({ id: inputId, className: "inputPanel__field", type: "checkbox", checked: checked, "aria-checked": checked, disabled: disabled, "aria-invalid": !!context.feil, "aria-errormessage": context.feilmeldingId }, other, { onFocus: () => this.toggleOutline(), onBlur: () => this.toggleOutline(), onChange: this.handleChange })),
            React.createElement("span", { className: "inputPanel__label" }, label),
            subtext && React.createElement("span", { className: "inputPanel__subtext" }, subtext)))));
    }
}
exports.default = CheckboksPanel;
