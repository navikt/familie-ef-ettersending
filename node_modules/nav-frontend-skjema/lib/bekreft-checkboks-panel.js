"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BekreftCheckboksPanel = void 0;
const React = __importStar(require("react"));
const classnames_1 = __importDefault(require("classnames"));
const PT = __importStar(require("prop-types"));
const nav_frontend_js_utils_1 = require("nav-frontend-js-utils");
const skjemaelement_feilmelding_1 = __importDefault(require("./skjemaelement-feilmelding"));
const _1 = require(".");
require("nav-frontend-skjema-style");
class BekreftCheckboksPanel extends React.Component {
    render() {
        const { checked, onChange, label, inputProps, className, feil, } = this.props;
        const feilmeldingId = nav_frontend_js_utils_1.guid();
        const cls = classnames_1.default("bekreftCheckboksPanel", className, {
            "bekreftCheckboksPanel--checked": checked,
            "bekreftCheckboksPanel--error": feil,
        });
        return (React.createElement("div", { className: cls },
            this.props.children && (React.createElement("div", { className: "bekreftCheckboksPanel__innhold" }, this.props.children)),
            React.createElement(_1.Checkbox, Object.assign({ "aria-invalid": !!feil, "aria-errormessage": feil ? feilmeldingId : undefined }, inputProps, { label: label, checked: checked, "aria-checked": checked, onChange: onChange })),
            React.createElement(skjemaelement_feilmelding_1.default, { id: feilmeldingId }, typeof feil !== "boolean" && feil)));
    }
}
exports.BekreftCheckboksPanel = BekreftCheckboksPanel;
BekreftCheckboksPanel.propTypes = {
    children: PT.node,
    className: PT.string,
    checked: PT.bool.isRequired,
    label: PT.string.isRequired,
    onChange: PT.func.isRequired,
    feil: PT.oneOfType([PT.node, PT.bool]),
};
exports.default = BekreftCheckboksPanel;
